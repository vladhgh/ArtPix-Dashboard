<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019">
	<Style x:Key="CustomContentDialogStyle" TargetType="{x:Type ui:ContentDialog}">
		<Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}"/>
		<Setter Property="Background" Value="{DynamicResource ContentDialogBackground}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource ContentDialogBorderWidth}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="PrimaryButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
		<Setter Property="SecondaryButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
		<Setter Property="CloseButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="IsShadowEnabled" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ui:ContentDialog}">
					<Border x:Name="Container">
						<VisualStateManager.CustomVisualStateManager>
							<ui:SimpleVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DialogShowingStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="DialogHidden">
										<Storyboard>
											<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="SnapsToDevicePixels" Storyboard.TargetName="LayoutRoot">
												<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
											</BooleanAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="LayoutRoot">
												<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
											</BooleanAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
												<DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
												<LinearDoubleKeyFrame KeyTime="0:0:0.083" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="DialogShowing">
										<Storyboard>
											<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="SnapsToDevicePixels" Storyboard.TargetName="LayoutRoot">
												<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
											</BooleanAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>

											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="LayoutRoot">
												<DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
												<LinearDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="DialogHidden"/>
								<VisualState x:Name="DialogShowing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(KeyboardNavigation.TabNavigation)" Storyboard.TargetName="BackgroundElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<KeyboardNavigationMode>Cycle</KeyboardNavigationMode>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DialogShowingWithoutSmokeLayer">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="LayoutRoot">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DialogSizingStates">
								<VisualState x:Name="DefaultDialogSizing"/>
								<VisualState x:Name="FullDialogSizing">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="VerticalAlignment" Storyboard.TargetName="BackgroundElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<VerticalAlignment>Stretch</VerticalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonsVisibilityStates">
								<VisualState x:Name="AllVisible"/>
								<VisualState x:Name="NoneVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CommandSpace">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PrimaryVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="PrimaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="PrimaryButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SecondaryVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="CloseVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PrimaryAndSecondaryVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CloseButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PrimaryAndCloseVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="PrimaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SecondaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SecondaryAndCloseVisible">
									<Storyboard>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="0"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="SecondaryButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="SecondaryButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="0,0,2,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.ColumnSpan)" Storyboard.TargetName="CloseButton">
											<DiscreteInt32KeyFrame KeyTime="0" Value="2"/>
										</Int32AnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="CloseButton">
											<DiscreteThicknessKeyFrame KeyTime="0" Value="2,0,0,0"/>
										</ThicknessAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PrimaryButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DefaultButtonStates">
								<VisualState x:Name="NoDefaultButton"/>
								<VisualState x:Name="PrimaryAsDefaultButton"/>
								<VisualState x:Name="SecondaryAsDefaultButton"/>
								<VisualState x:Name="CloseAsDefaultButton"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DialogBorderStates">
								<VisualState x:Name="NoBorder"/>
								<VisualState x:Name="AccentColorBorder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BackgroundElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource SystemControlForegroundAccentBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="LayoutRoot" Background="{DynamicResource SystemControlPageBackgroundMediumAltMediumBrush}" SnapsToDevicePixels="True" Visibility="Collapsed">
							<Grid x:Name="BackgroundElement" FlowDirection="{TemplateBinding FlowDirection}" HorizontalAlignment="Center" MaxWidth="700" MaxHeight="740" MinWidth="700" MinHeight="740" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center">
								<Grid.RenderTransform>
									<ScaleTransform/>
								</Grid.RenderTransform>
								<ui:ThemeShadowChrome x:Name="Shdw" CornerRadius="{TemplateBinding CornerRadius}" IsShadowEnabled="{TemplateBinding IsShadowEnabled}" Margin="{DynamicResource ContentDialogBorderWidth}"/>
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
									<Border x:Name="DialogSpace" Padding="10 0 10 0">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<ScrollViewer x:Name="ContentScrollViewer" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" Margin="0" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
												<Grid>
													<Grid.RowDefinitions>
														<RowDefinition Height="Auto"/>
														<RowDefinition Height="*"/>
													</Grid.RowDefinitions>
													<ContentControl x:Name="Title" ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" Foreground="{TemplateBinding Foreground}" FontWeight="Normal" FontSize="20" FontFamily="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" HorizontalAlignment="Left" IsTabStop="False" Margin="{DynamicResource ContentDialogTitleMargin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top">
														<ContentControl.Template>
															<ControlTemplate TargetType="{x:Type ContentControl}">
																<ui:ContentPresenterEx ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
															</ControlTemplate>
														</ContentControl.Template>
													</ContentControl>
													<ui:ContentPresenterEx x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource ControlContentThemeFontSize}" FontFamily="{DynamicResource ContentControlThemeFontFamily}" Margin="{DynamicResource ContentDialogContentMargin}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap"/>
												</Grid>
											</ScrollViewer>
											<Grid x:Name="CommandSpace" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch" Margin="{DynamicResource ContentDialogCommandSpaceMargin}" Grid.Row="1" VerticalAlignment="Bottom">
												<Grid.ColumnDefinitions>
													<ColumnDefinition/>
													<ColumnDefinition Width="0.5*"/>
													<ColumnDefinition Width="0.5*"/>
													<ColumnDefinition/>
												</Grid.ColumnDefinitions>
												<Button x:Name="PrimaryButton" Content="{TemplateBinding PrimaryButtonText}" Grid.Column="0" HorizontalAlignment="Stretch" IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}" Margin="0,0,2,0" Style="{TemplateBinding PrimaryButtonStyle}" VerticalAlignment="Stretch"/>
												<Button x:Name="SecondaryButton" Grid.ColumnSpan="2" Content="{TemplateBinding SecondaryButtonText}" Grid.Column="1" HorizontalAlignment="Stretch" IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}" Margin="2,0" Style="{TemplateBinding SecondaryButtonStyle}" VerticalAlignment="Stretch"/>
												<Button x:Name="CloseButton" Content="{TemplateBinding CloseButtonText}" Grid.Column="3" HorizontalAlignment="Stretch" Margin="2,0,0,0" Style="{TemplateBinding CloseButtonStyle}" VerticalAlignment="Stretch"/>
											</Grid>
										</Grid>
									</Border>
								</Border>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsShadowEnabled" Value="False">
							<Setter Property="Visibility" TargetName="Shdw" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="DefaultButton" Value="Primary">
							<Setter Property="Style" TargetName="PrimaryButton" Value="{DynamicResource AccentButtonStyle}"/>
						</Trigger>
						<Trigger Property="DefaultButton" Value="Secondary">
							<Setter Property="Style" TargetName="SecondaryButton" Value="{DynamicResource AccentButtonStyle}"/>
						</Trigger>
						<Trigger Property="DefaultButton" Value="Close">
							<Setter Property="Style" TargetName="CloseButton" Value="{DynamicResource AccentButtonStyle}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>