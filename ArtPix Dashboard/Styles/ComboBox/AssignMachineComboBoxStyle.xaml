<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019">
	<Style x:Key="AssignMachineComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}"/>
		<Setter Property="MaxDropDownHeight" Value="504"/>
		<Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}"/>
		<Setter Property="Background" Value="{DynamicResource ComboBoxBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
		<Setter Property="ui:ComboBoxHelper.TextBoxStyle">
			<Setter.Value>
				<Style TargetType="{x:Type TextBox}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TextBox}">
								<Grid SnapsToDevicePixels="True">
									<Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4"/>
									<ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{DynamicResource TextControlContentHostStyle}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
									<TextBlock x:Name="PlaceholderTextContentPresenter" Foreground="{DynamicResource TextControlPlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundDisabled}"/>
										<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
										<Setter Property="Foreground" TargetName="PART_ContentHost" Value="{DynamicResource TextControlForegroundDisabled}"/>
										<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}"/>
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
										<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
										<Setter Property="Foreground" TargetName="PART_ContentHost" Value="{DynamicResource TextControlForegroundPointerOver}"/>
										<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
									</Trigger>
									<Trigger Property="IsSelectionActive" Value="True">
										<Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundFocused}"/>
										<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
										<Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
										<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
										<Setter Property="CaretBrush" Value="{DynamicResource TextControlForegroundFocused}"/>
										<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
									</Trigger>
									<Trigger Property="Text" Value="">
										<Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Visible"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.BasedOn>
						<Style TargetType="{x:Type TextBox}">
							<Setter Property="OverridesDefaultStyle" Value="True"/>
							<Setter Property="Foreground" Value="{DynamicResource TextControlForeground}"/>
							<Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
							<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
							<Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}"/>
							<Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}"/>
							<Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
							<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
							<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
							<Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
							<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
							<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
							<Setter Property="VerticalContentAlignment" Value="Top"/>
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}"/>
							<Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}"/>
							<Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
							<Setter Property="ui:ControlHelper.CornerRadius" Value="4"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
							<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							<Setter Property="AllowDrop" Value="True"/>
							<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
							<Setter Property="ContextMenu" Value="{DynamicResource TextControlContextMenu}"/>
							<Setter Property="ui:TextContextMenu.UsingTextContextMenu" Value="True"/>
							<Setter Property="ui:TextBoxHelper.IsEnabled" Value="True"/>
							<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<ControlTemplate.Resources>
											<Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Button}">
															<ControlTemplate.Resources>
																<StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
															</ControlTemplate.Resources>
															<Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="4">
																<ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
															</Border>
															<ControlTemplate.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
																	<Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
																	<Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
																</Trigger>
																<Trigger Property="IsPressed" Value="True">
																	<Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
																	<Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
																	<Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ControlTemplate.Resources>
										<Grid SnapsToDevicePixels="True">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="ButtonStates">
													<VisualState x:Name="ButtonVisible">
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<Visibility>Visible</Visibility>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="ButtonCollapsed"/>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource TextControlHeaderForeground}" FontWeight="Normal" Margin="{DynamicResource TextBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
											<Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="4" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Grid.Row="1" Grid.RowSpan="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
											<ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource TextControlContentHostStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
											<TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}"/>
											<Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Focusable="False" FontSize="{TemplateBinding FontSize}" IsTabStop="False" ui:TextBoxHelper.IsDeleteButton="True" MinWidth="34" Padding="{DynamicResource HelperButtonThemePadding}" Grid.Row="1" Visibility="Collapsed" VerticalAlignment="Stretch">
												<ui:ControlHelper.CornerRadius>
													<TemplateBinding Property="ui:ControlHelper.CornerRadius">
														<TemplateBinding.Converter>
															<ui:CornerRadiusFilterConverter Filter="Right" Scale="1"/>
														</TemplateBinding.Converter>
													</TemplateBinding>
												</ui:ControlHelper.CornerRadius>
												<Button.Style>
													<Style TargetType="{x:Type Button}">
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Button}">
																	<ControlTemplate.Resources>
																		<StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
																	</ControlTemplate.Resources>
																	<Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="4">
																		<ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
																	</Border>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
																			<Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
																			<Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
																		</Trigger>
																		<Trigger Property="IsPressed" Value="True">
																			<Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
																			<Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
																			<Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
																		</Trigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Button.Style>
											</Button>
											<ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="ui:ControlHelper.PlaceholderForeground" Value="{x:Null}">
												<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForeground}"/>
											</Trigger>
											<Trigger Property="ui:TextBoxHelper.HasText" Value="True">
												<Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Collapsed"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource TextControlHeaderForegroundDisabled}"/>
												<Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}"/>
												<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
												<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}"/>
												<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
												<Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
												<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
												<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}"/>
											</Trigger>
											<Trigger Property="IsSelectionActive" Value="True">
												<Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
												<Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
												<Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
												<Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
												<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
											</Trigger>
											<MultiTrigger>
												<MultiTrigger.Conditions>
													<Condition Property="IsKeyboardFocused" Value="True"/>
													<Condition Property="ui:TextBoxHelper.HasText" Value="True"/>
													<Condition Property="IsReadOnly" Value="False"/>
													<Condition Property="AcceptsReturn" Value="False"/>
													<Condition Property="TextWrapping" Value="NoWrap"/>
												</MultiTrigger.Conditions>
												<Setter Property="ui:TextBoxHelper.IsDeleteButtonVisible" Value="True"/>
											</MultiTrigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Style.BasedOn>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
		<Setter Property="ui:ControlHelper.PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}"/>
		<Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource IsApplicationFocusVisualKindReveal}"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
		<Setter Property="ui:ComboBoxHelper.KeepInteriorCornersSquare" Value="False"/>
		<Setter Property="ui:ControlHelper.CornerRadius" Value="4"/>
		<Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<ControlTemplate.Resources>
						<StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
					</ControlTemplate.Resources>
					<Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
						<Grid.Resources>

						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="32"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource ComboBoxHeaderForeground}" FontWeight="{DynamicResource ComboBoxHeaderThemeFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Margin="{DynamicResource ComboBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
						<Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="4" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{DynamicResource ComboBoxThemeMinWidth}" Grid.Row="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
						<Border x:Name="HighlightBackground" BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ComboBoxBackgroundUnfocused}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="4" Opacity="0" Grid.Row="1"/>
						<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<TextBlock x:Name="PlaceholderTextBlock" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Padding="0,0,32,0" Grid.Row="1" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<ToggleButton x:Name="ToggleButton" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="OverridesDefaultStyle" Value="True"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="ClickMode" Value="Release"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<TextBox x:Name="PART_EditableTextBox" BorderBrush="Transparent" Grid.ColumnSpan="2" Grid.Column="0" ui:ControlHelper.CornerRadius="4" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="False" Margin="0" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" ui:ControlHelper.PlaceholderForeground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" Padding="{DynamicResource ComboBoxEditableTextPadding}" ui:ControlHelper.PlaceholderText="{TemplateBinding ui:ControlHelper.PlaceholderText}" Grid.Row="1" Style="{TemplateBinding ui:ComboBoxHelper.TextBoxStyle}" Visibility="Collapsed" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<ToggleButton x:Name="DropDownOverlay" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,1,1" Grid.Row="1" Visibility="Collapsed" Width="30">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="OverridesDefaultStyle" Value="True"/>
									<Setter Property="IsTabStop" Value="False"/>
									<Setter Property="Focusable" Value="False"/>
									<Setter Property="ClickMode" Value="Release"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<ui:FontIconFallback x:Name="DropDownGlyph" Grid.Column="1" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,10,0" MinHeight="{DynamicResource ComboBoxMinHeight}" Grid.Row="1" VerticalAlignment="Center"/>
						<ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
						<Popup x:Name="PART_Popup"  AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Fade" Placement="Bottom">
							<Popup.PlacementRectangle>
								<MultiBinding UpdateSourceTrigger="Default">
									<MultiBinding.Converter>
										<ui:PlacementRectangleConverter Margin="0 38"/>
									</MultiBinding.Converter>
									<Binding ElementName="Background" Path="ActualWidth"/>
									<Binding ElementName="Background" Path="ActualHeight"/>
								</MultiBinding>
							</Popup.PlacementRectangle>
							<ui:ThemeShadowChrome x:Name="Shdw" CornerRadius="{Binding CornerRadius, ElementName=PopupBorder}" IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="28.8,28.8,28.8,41.6" MinWidth="{Binding ActualWidth, ElementName=LayoutRoot}">
								<Border x:Name="PopupBorder" Background="{DynamicResource ComboBoxDropDownBackground}" CornerRadius="4" HorizontalAlignment="Stretch">
									<Border BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="{Binding CornerRadius, ElementName=PopupBorder}" Padding="{DynamicResource ComboBoxDropdownBorderPadding}">
										<ScrollViewer x:Name="ScrollViewer" Foreground="{DynamicResource ComboBoxDropDownForeground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
											<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="0 0 0 0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</ScrollViewer>
									</Border>
								</Border>
							</ui:ThemeShadowChrome>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}"/>
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushPointerOver}"/>
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundPointerOver}"/>
							<Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundPointerOver}"/>
						</Trigger>
						<Trigger Property="IsPressed" SourceName="ToggleButton" Value="True">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundPressed}"/>
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushPressed}"/>
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundPressed}"/>
							<Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}"/>
							<Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushDisabled}"/>
							<Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource ComboBoxHeaderForegroundDisabled}"/>
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundDisabled}"/>
							<Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundDisabled}"/>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}"/>
						</Trigger>
						<Trigger Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True">
							<Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
							<Setter Property="Background" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundFocused}"/>
							<Setter Property="BorderBrush" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundBorderBrushFocused}"/>
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocused}"/>
							<Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocused}"/>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
								<Condition Property="IsPressed" SourceName="ToggleButton" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocusedPressed}"/>
							<Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}"/>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
								<Condition Property="IsDropDownOpen" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PopupBorder" Value="Visible"/>
						</MultiTrigger>
						<Trigger Property="IsEditable" Value="True">
							<Setter Property="Visibility" TargetName="ContentPresenter" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="ToggleButton" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
							<Setter Property="Visibility" TargetName="DropDownOverlay" Value="Visible"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditable" Value="False"/>
								<Condition Property="SelectedIndex" Value="-1"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="PlaceholderTextBlock" Value="Visible"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
								<Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="False"/>
								<Condition Property="IsPressed" SourceName="DropDownOverlay" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
							<Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
								<Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
							<Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerOver}"/>
							<Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
								<Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
							<Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerPressed}"/>
							<Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
								<Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
								<Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerPressed}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="True"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>