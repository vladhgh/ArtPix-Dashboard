<ui:Page
	x:Name="MachinesDashboardPage"
	x:Class="ArtPix_Dashboard.Views.MachinesDashboardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
    xmlns:machine="clr-namespace:ArtPix_Dashboard.Models.Machine"
    xmlns:viewmodels="clr-namespace:ArtPix_Dashboard.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:MachinesDashboardViewModel}"
    mc:Ignorable="d"
    Background="Transparent">
    <ui:Page.Resources>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}"/>
            <Setter Property="MaxDropDownHeight" Value="504"/>
            <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}"/>
            <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
            <Setter Property="ui:ComboBoxHelper.TextBoxStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Grid SnapsToDevicePixels="True">
                                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"/>
                                        <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Style="{DynamicResource TextControlContentHostStyle}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                                        <TextBlock x:Name="PlaceholderTextContentPresenter" Foreground="{DynamicResource TextControlPlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundDisabled}"/>
                                            <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
                                            <Setter Property="Foreground" TargetName="PART_ContentHost" Value="{DynamicResource TextControlForegroundDisabled}"/>
                                            <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
                                            <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
                                            <Setter Property="Foreground" TargetName="PART_ContentHost" Value="{DynamicResource TextControlForegroundPointerOver}"/>
                                            <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelectionActive" Value="True">
                                            <Setter Property="Background" TargetName="BorderElement" Value="{DynamicResource TextControlBackgroundFocused}"/>
                                            <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
                                            <Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
                                            <Setter Property="CaretBrush" Value="{DynamicResource TextControlForegroundFocused}"/>
                                            <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}"/>
                                <Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
                                <Setter Property="SelectionBrush" Value="{DynamicResource TextControlSelectionHighlightColor}"/>
                                <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThickness}"/>
                                <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
                                <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
                                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                <Setter Property="MinHeight" Value="{DynamicResource TextControlThemeMinHeight}"/>
                                <Setter Property="MinWidth" Value="{DynamicResource TextControlThemeMinWidth}"/>
                                <Setter Property="Padding" Value="{DynamicResource TextControlThemePadding}"/>
                                <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
                                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="AllowDrop" Value="True"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="ContextMenu" Value="{DynamicResource TextControlContextMenu}"/>
                                <Setter Property="ui:TextContextMenu.UsingTextContextMenu" Value="True"/>
                                <Setter Property="ui:TextBoxHelper.IsEnabled" Value="True"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ControlTemplate.Resources>
                                                <Style x:Key="DeleteButtonStyle" TargetType="{x:Type Button}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <ControlTemplate.Resources>
                                                                    <StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
                                                                </ControlTemplate.Resources>
                                                                <Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                                                                    <ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
                                                                        <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
                                                                        <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
                                                                        <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
                                                                        <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ControlTemplate.Resources>
                                            <Grid SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="ButtonStates">
                                                        <VisualState x:Name="ButtonVisible">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="ButtonCollapsed"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource TextControlHeaderForeground}" FontWeight="Normal" Margin="{DynamicResource TextBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
                                                <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Grid.Row="1" Grid.RowSpan="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
                                                <ScrollViewer x:Name="PART_ContentHost" Grid.Column="0" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource TextControlContentHostStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" TextAlignment="{TemplateBinding TextAlignment}" TextWrapping="{TemplateBinding TextWrapping}" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}"/>
                                                <Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Focusable="False" FontSize="{TemplateBinding FontSize}" IsTabStop="False" ui:TextBoxHelper.IsDeleteButton="True" MinWidth="34" Padding="{DynamicResource HelperButtonThemePadding}" Grid.Row="1" Visibility="Collapsed" VerticalAlignment="Stretch">
                                                    <ui:ControlHelper.CornerRadius>
                                                        <TemplateBinding Property="ui:ControlHelper.CornerRadius">
                                                            <TemplateBinding.Converter>
                                                                <ui:CornerRadiusFilterConverter Filter="Right" Scale="1"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </ui:ControlHelper.CornerRadius>
                                                    <Button.Style>
                                                        <Style TargetType="{x:Type Button}">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <ControlTemplate.Resources>
                                                                            <StreamGeometry x:Key="Cancel">M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z</StreamGeometry>
                                                                        </ControlTemplate.Resources>
                                                                        <Border x:Name="ButtonLayoutGrid" BorderBrush="{DynamicResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource TextControlButtonBackground}" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}">
                                                                            <ui:FontIconFallback x:Name="GlyphElement" Data="M10.888672,10L17.626953,16.748047 16.748047,17.626953 10,10.888672 3.251953,17.626953 2.373047,16.748047 9.111328,10 2.373047,3.251953 3.251953,2.373047 10,9.111328 16.748047,2.373047 17.626953,3.251953z" Foreground="{DynamicResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPointerOver}"/>
                                                                                <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}"/>
                                                                                <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPointerOver}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBackgroundPressed}"/>
                                                                                <Setter Property="BorderBrush" TargetName="ButtonLayoutGrid" Value="{DynamicResource TextControlButtonBorderBrushPressed}"/>
                                                                                <Setter Property="Foreground" TargetName="GlyphElement" Value="{DynamicResource TextControlButtonForegroundPressed}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Opacity" TargetName="ButtonLayoutGrid" Value="0"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                                <ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ui:ControlHelper.PlaceholderForeground" Value="{x:Null}">
                                                    <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForeground}"/>
                                                </Trigger>
                                                <Trigger Property="ui:TextBoxHelper.HasText" Value="True">
                                                    <Setter Property="Visibility" TargetName="PlaceholderTextContentPresenter" Value="Collapsed"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource TextControlHeaderForegroundDisabled}"/>
                                                    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundDisabled}"/>
                                                    <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushDisabled}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}"/>
                                                    <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
                                                    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundPointerOver}"/>
                                                    <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundPointerOver}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundPointerOver}"/>
                                                </Trigger>
                                                <Trigger Property="IsSelectionActive" Value="True">
                                                    <Setter Property="Foreground" TargetName="PlaceholderTextContentPresenter" Value="{DynamicResource TextControlPlaceholderForegroundFocused}"/>
                                                    <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}"/>
                                                    <Setter Property="BorderBrush" TargetName="BorderElement" Value="{DynamicResource TextControlBorderBrushFocused}"/>
                                                    <Setter Property="BorderThickness" TargetName="BorderElement" Value="{DynamicResource TextControlBorderThemeThicknessFocused}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource TextControlForegroundFocused}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                                        <Condition Property="ui:TextBoxHelper.HasText" Value="True"/>
                                                        <Condition Property="IsReadOnly" Value="False"/>
                                                        <Condition Property="AcceptsReturn" Value="False"/>
                                                        <Condition Property="TextWrapping" Value="NoWrap"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ui:TextBoxHelper.IsDeleteButtonVisible" Value="True"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
            <Setter Property="ui:ControlHelper.PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}"/>
            <Setter Property="ui:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource IsApplicationFocusVisualKindReveal}"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
            <Setter Property="ui:ComboBoxHelper.KeepInteriorCornersSquare" Value="True"/>
            <Setter Property="ui:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource TextControlValidationErrorTemplate}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <StreamGeometry x:Key="ChevronDown">M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z</StreamGeometry>
                        </ControlTemplate.Resources>
                        <Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
                            <Grid.Resources>

                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="32"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ui:ContentPresenterEx x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding ui:ControlHelper.HeaderTemplate}" Content="{TemplateBinding ui:ControlHelper.Header}" Grid.Column="0" Foreground="{DynamicResource ComboBoxHeaderForeground}" FontWeight="{DynamicResource ComboBoxHeaderThemeFontWeight}" FlowDirection="{TemplateBinding FlowDirection}" Margin="{DynamicResource ComboBoxTopHeaderMargin}" Grid.Row="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextWrapping="Wrap" Visibility="{TemplateBinding ui:ControlHelper.HeaderVisibility}" VerticalAlignment="Top"/>
                            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" Validation.ErrorTemplate="{x:Null}" ui:ValidationHelper.IsTemplateValidationAdornerSite="True" MinWidth="{DynamicResource ComboBoxThemeMinWidth}" Grid.Row="1" Validation.ValidationAdornerSiteFor="{x:Null}"/>
                            <Border x:Name="HighlightBackground" BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ComboBoxBackgroundUnfocused}" Grid.ColumnSpan="2" Grid.Column="0" CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" Opacity="0" Grid.Row="1"/>
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock x:Name="PlaceholderTextBlock" Grid.Column="0" Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Padding="0,0,32,0" Grid.Row="1" Text="{TemplateBinding ui:ControlHelper.PlaceholderText}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton x:Name="ToggleButton" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="1">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Release"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <TextBox x:Name="PART_EditableTextBox" BorderBrush="Transparent" Grid.ColumnSpan="2" Grid.Column="0" ui:ControlHelper.CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}" ui:ControlHelper.PlaceholderForeground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}" Padding="{DynamicResource ComboBoxEditableTextPadding}" ui:ControlHelper.PlaceholderText="{TemplateBinding ui:ControlHelper.PlaceholderText}" Grid.Row="1" Style="{TemplateBinding ui:ComboBoxHelper.TextBoxStyle}" Visibility="Collapsed" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ToggleButton x:Name="DropDownOverlay" Background="Transparent" Grid.Column="1" HorizontalAlignment="Right" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,1,1" Grid.Row="1" Visibility="Collapsed" Width="30">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="ClickMode" Value="Release"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ui:FontIconFallback x:Name="DropDownGlyph" Grid.Column="1" Data="M18.935547,4.560547L19.814453,5.439453 10,15.253906 0.185547,5.439453 1.064453,4.560547 10,13.496094z" Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}" FontSize="12" FontFamily="{DynamicResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,10,0" MinHeight="{DynamicResource ComboBoxMinHeight}" Grid.Row="1" VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="DescriptionPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding ui:ControlHelper.Description}" Grid.Column="0" TextElement.Foreground="{DynamicResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ui:ControlHelper.DescriptionVisibility}"/>
                            <Popup x:Name="PART_Popup"  AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="None" Placement="Bottom">
                                <Popup.PlacementRectangle>
                                    <MultiBinding UpdateSourceTrigger="Default">
                                        <MultiBinding.Converter>
                                            <ui:PlacementRectangleConverter Margin="0,60"/>
                                        </MultiBinding.Converter>
                                        <Binding ElementName="Background" Path="ActualWidth"/>
                                        <Binding ElementName="Background" Path="ActualHeight"/>
                                    </MultiBinding>
                                </Popup.PlacementRectangle>
                                <ui:ThemeShadowChrome x:Name="Shdw" CornerRadius="{Binding CornerRadius, ElementName=PopupBorder}" IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="28.8,28.8,28.8,41.6" MinWidth="{Binding ActualWidth, ElementName=LayoutRoot}">
                                    <Border x:Name="PopupBorder" Background="{DynamicResource ComboBoxDropDownBackground}" CornerRadius="{DynamicResource OverlayCornerRadius}" HorizontalAlignment="Stretch">
                                        <Border BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}" BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}" CornerRadius="{Binding CornerRadius, ElementName=PopupBorder}" Padding="{DynamicResource ComboBoxDropdownBorderPadding}">
                                            <ScrollViewer x:Name="ScrollViewer" Foreground="{DynamicResource ComboBoxDropDownForeground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="0 0 0 0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Border>
                                </ui:ThemeShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}"/>
                                <Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushPointerOver}"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundPointerOver}"/>
                                <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundPointerOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" SourceName="ToggleButton" Value="True">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundPressed}"/>
                                <Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushPressed}"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundPressed}"/>
                                <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}"/>
                                <Setter Property="BorderBrush" TargetName="Background" Value="{DynamicResource ComboBoxBorderBrushDisabled}"/>
                                <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource ComboBoxHeaderForegroundDisabled}"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundDisabled}"/>
                                <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundDisabled}"/>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}"/>
                            </Trigger>
                            <Trigger Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True">
                                <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                <Setter Property="Background" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundFocused}"/>
                                <Setter Property="BorderBrush" TargetName="HighlightBackground" Value="{DynamicResource ComboBoxBackgroundBorderBrushFocused}"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocused}"/>
                                <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocused}"/>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
                                    <Condition Property="IsPressed" SourceName="ToggleButton" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="HighlightBackground" Value="1"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ComboBoxForegroundFocusedPressed}"/>
                                <Setter Property="Foreground" TargetName="PlaceholderTextBlock" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}"/>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ui:FocusVisualHelper.ShowFocusVisual" Value="True"/>
                                    <Condition Property="IsDropDownOpen" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PopupBorder" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="Visibility" TargetName="ContentPresenter" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="ToggleButton" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="DropDownOverlay" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEditable" Value="False"/>
                                    <Condition Property="SelectedIndex" Value="-1"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PlaceholderTextBlock" Value="Visible"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                    <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="False"/>
                                    <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                    <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerOver}"/>
                                <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="True"/>
                                    <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="DropDownGlyph" Value="{DynamicResource ComboBoxEditableDropDownGlyphForeground}"/>
                                <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxFocusedDropDownBackgroundPointerPressed}"/>
                                <Setter Property="Margin" TargetName="DropDownOverlay" Value="0,2,2,2"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
                                    <Condition Property="IsMouseOver" SourceName="DropDownOverlay" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerOver}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionActive" SourceName="PART_EditableTextBox" Value="False"/>
                                    <Condition Property="IsPressed" SourceName="DropDownOverlay" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="DropDownOverlay" Value="{DynamicResource ComboBoxDropDownBackgroundPointerPressed}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="True"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ui:Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>


        <ui:SimpleStackPanel Name="FilterGroup" Grid.Row="1" Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center">
            <TextBlock
					Text="Filter:"
                    Margin="0 0 0 10"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Style="{DynamicResource SubtitleTextBlockStyle}"
					FontWeight="Black"/>
            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10" VerticalAlignment="Center" >
                <TextBox
                        x:Name="searchTextBox"
                        MinWidth="200"
                        Height="Auto"
                        HorizontalAlignment="Left"
                        ui:ControlHelper.Header="Search Orders:"
                        ui:ControlHelper.PlaceholderText="Search by order name..."/>
                <Button Content="Search" VerticalAlignment="Bottom" Style="{DynamicResource AccentButtonStyle}" Margin="0 0 10 0"/>
                <ComboBox VerticalAlignment="Center" x:Name="EngravingStatusComboBox" MinWidth="200" ui:ControlHelper.Header="Engraving Status:" ui:ControlHelper.PlaceholderText="Engraving Status"  SelectedIndex="1">
                    <ComboBoxItem Content="Awaiting Model" Tag="wait_model"/>
                    <ComboBoxItem Content="Ready To Engrave" Tag="ready_to_engrave"/>
                    <ComboBoxItem Content="Processing" Tag="processing"/>
                    <ComboBoxItem Content="Engraved" Tag="engraved"/>
                    <ComboBoxItem Content="Engraved Today" Tag="engraved_today"/>
                </ComboBox>
                <ComboBox x:Name="MachineComboBox" SelectedIndex="0"  VerticalAlignment="Center" ui:ControlHelper.Header="Engraving Machine:" ui:ControlHelper.PlaceholderText="Machine" Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBoxItem Content="All Machines" Tag="All"/>
                    <ComboBoxItem Content="Machine 1" Tag="1"/>
                    <ComboBoxItem Content="Machine 2" Tag="2"/>
                    <ComboBoxItem Content="Machine 3" Tag="3"/>
                    <ComboBoxItem Content="Machine 4" Tag="4"/>
                    <ComboBoxItem Content="Machine 5" Tag="5"/>
                    <ComboBoxItem Content="Machine 6" Tag="6"/>
                    <ComboBoxItem Content="Machine 7" Tag="7"/>
                    <ComboBoxItem Content="Machine 8" Tag="8"/>
                    <ComboBoxItem Content="Machine 9" Tag="9"/>
                    <ComboBoxItem Content="Machine 10" Tag="10"/>
                    <ComboBoxItem Content="Machine 11" Tag="11"/>
                    <ComboBoxItem Content="Machine 12" Tag="12"/>
                    <ComboBoxItem Content="Machine 13" Tag="13"/>
                    <ComboBoxItem Content="Machine 14" Tag="14"/>
                    <ComboBoxItem Content="Machine 15" Tag="15"/>
                    <ComboBoxItem Content="Machine 16" Tag="16"/>
                    <ComboBoxItem Content="Machine 17" Tag="17"/>
                    <ComboBoxItem Content="Machine 18" Tag="18"/>
                    <ComboBoxItem Content="Machine 19" Tag="19"/>
                    <ComboBoxItem Content="Machine 20" Tag="20"/>
                    <ComboBoxItem Content="Machine 21" Tag="21"/>
                    <ComboBoxItem Content="Machine 22" Tag="22"/>
                    <ComboBoxItem Content="Machine 23" Tag="23"/>
                    <ComboBoxItem Content="Machine 24" Tag="24"/>
                    <ComboBoxItem Content="Machine 25" Tag="25"/>
                    <ComboBoxItem Content="Machine 26" Tag="26"/>
                    <ComboBoxItem Content="Machine 27" Tag="27"/>
                    <ComboBoxItem Content="Machine 28" Tag="28"/>
                    <ComboBoxItem Content="Machine 29" Tag="29"/>
                    <ComboBoxItem Content="Machine 30" Tag="30"/>
                    <ComboBoxItem Content="Machine 31" Tag="31"/>
                    <ComboBoxItem Content="Machine 32" Tag="32"/>
                    <ComboBoxItem Content="Machine 33" Tag="33"/>
                    <ComboBoxItem Content="Machine 34" Tag="34"/>
                </ComboBox>
                <ui:SimpleStackPanel Orientation="Vertical" Margin="10 0 0 0">
                    <TextBlock Text="Additional Controls:" Margin="0 0 0 5"/>
                    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                        <ToggleButton Content="Express Orders" Cursor="Hand" VerticalAlignment="Bottom"/>
                        <Button Content="Reload List" Cursor="Hand" VerticalAlignment="Bottom" Click="ButtonReloadOnClick"/>
                    </ui:SimpleStackPanel>
                </ui:SimpleStackPanel>

            </ui:SimpleStackPanel>
        </ui:SimpleStackPanel>

        <TextBlock
                    Grid.Row="4" Grid.Column="1"
                    Margin="0 10 0 10"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
                    Style="{DynamicResource SubtitleTextBlockStyle}"
					FontWeight="Black">
            <Run Text="{Binding ElementName=EngravingStatusComboBox, Path=Text}"/>
            <Run Text="{Binding ElementName=MachineComboBox, Path=Text, StringFormat=On {0:F0}}"/>
            <Run Text="{Binding MachineAssignedItems.Meta.Total, StringFormat=({0:F0}):}"/>
        </TextBlock>

        <ui:ProgressRing Name="ProgressRing" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" Margin="10 0 0 0" Height="50" Width="50" IsActive="{Binding IsLoading}"/>

        <ui:ListView x:Name="LaserMachineItemsListView"
					ItemsSource="{Binding MachineAssignedItems.Data}"
                    Visibility="{Binding IsLoaded}" xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Event=Visibility, Duration=600, Delay=600}"
					Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2"
					MaxHeight="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height}"
					MinWidth="550"
                    MaxWidth="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}"
					BorderThickness="1"
					IsSelectionEnabled="False"
                    VirtualizingPanel.ScrollUnit="Pixel"
					BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}">
            <ui:ListView.ItemTemplate>
                <DataTemplate DataType="machine:Datum">
                    <ui:SimpleStackPanel Orientation="Horizontal" Margin="20 20 0 20" Spacing="10" HorizontalAlignment="Stretch" MinWidth="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}">
                        <Image Width="150" Height="150" Stretch="Uniform" xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Event=Loaded, Duration=600, Delay=600}">
                            <Image.Source>
                                <BitmapImage DecodePixelWidth="150" UriSource="{Binding Path=Product.UrlRenderImg, Mode=OneWay, FallbackValue=/Assets/placeholder.png}" />
                            </Image.Source>
                        </Image>
                        <ui:SimpleStackPanel Orientation="Vertical" Spacing="2" Margin="12,0,0,0" xf:Animations.Primary="{xf:Animate BasedOn={StaticResource FadeIn}, Event=Loaded, Duration=600, Delay=600}">
                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10" VerticalAlignment="Center">
                                <TextBlock
                                    Text="{Binding Order.NameOrder, Mode=OneTime, StringFormat=Order: {0:N}}"
                                    FontWeight="Black"
                                    Style="{DynamicResource SubheaderTextBlockStyle}"
                                    HorizontalAlignment="Left" />
                                <Button Background="SteelBlue" Style="{StaticResource CrystalRedoButtonStyle}" MaxHeight="25" Opacity="0.9" Margin="0 5 10 0">
                                    <TextBlock
                                        Text="Redo"
                                        FontSize="10"
                                        Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                                <Button Background="{Binding UpdatedAtAgeColor}" Style="{StaticResource InactiveButtonStyle}" VerticalAlignment="Center" MaxHeight="25" Opacity="0.9">
                                    <TextBlock
                                        Text="{Binding UpdatedAtAge, StringFormat=Added {0:N} ago, Mode=OneWay}"
                                        Margin="10 0 10 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                            </ui:SimpleStackPanel>
                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10" Margin="0 0 0 5">
                                <Button Background="{Binding Order.StatusOrderColor}" Style="{StaticResource InactiveButtonStyle}" Opacity="0.9">
                                    <TextBlock
				                                Text="{Binding Order.StatusOrder, StringFormat=Shop: {0:N}, Mode=OneWay}"
				                                Margin="10 0 10 0"
				                                HorizontalAlignment="Left"
				                                VerticalAlignment="Center"
                                                FontSize="10"
				                                Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                                <Button Background="{Binding Order.StatusEngravingColor}" Style="{StaticResource InactiveButtonStyle}" Opacity="0.9">
                                    <TextBlock
				                                Text="{Binding Order.StatusEngraving, StringFormat=Engraving: {0:N}, Mode=OneWay}"
				                                Margin="10 0 10 0"
				                                HorizontalAlignment="Left"
				                                VerticalAlignment="Center"
                                                FontSize="10"
				                                Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                                <Button Style="{DynamicResource MachineButtonStyle}" Visibility="{Binding MachineButtonVisibility}" Height="25" Opacity="0.9" >
                                    <TextBlock
                                                                        Text="{Binding MachineId, StringFormat=Machine: {0:N}}"
                                                                        FontSize="10"
																		Margin="0"
																		Padding="0"
                                                                        Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                                <Button Background="DarkRed" Style="{StaticResource InactiveButtonStyle}" MaxHeight="25" Visibility="{Binding IsActionNeeded}" Opacity="0.9">
                                    <TextBlock
                                                Text="Action Needed!"
                                                Margin="10 0 10 0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                FontSize="10"
                                                Style="{DynamicResource BaseTextBlockStyle}"/>
                                </Button>
                            </ui:SimpleStackPanel>
                            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10">
                                <TextBlock
                                    Text="{Binding Product.Name, Mode=OneTime}"
                                    Style="{DynamicResource BaseTextBlockStyle}"
                                    Foreground="LightGray"
                                    HorizontalAlignment="Left" VerticalAlignment="Center" />
                            </ui:SimpleStackPanel>
                            <ui:SimpleStackPanel Orientation="Horizontal" >
                                <TextBlock
                                    Text="Shipping: "
                                    HorizontalAlignment="Left"
                                    Style="{DynamicResource BaseTextBlockStyle}"
                                    TextTrimming="CharacterEllipsis"
                                    Foreground="LightGray"
                                    TextWrapping="NoWrap" />
                                <TextBlock
                                    Text="{Binding Order.ShippingType, Mode=OneTime}"
                                    Foreground="{Binding Order.ShippingTypeColor}"
                                    HorizontalAlignment="Left"
                                    Style="{DynamicResource BaseTextBlockStyle}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="NoWrap"
                                />
                            </ui:SimpleStackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock
											Text="{Binding ProductId, Mode=OneTime, StringFormat=Product ID: {0:F0}}"
											HorizontalAlignment="Left"
											Style="{DynamicResource BaseTextBlockStyle}"
											TextTrimming="CharacterEllipsis"
                                            Foreground="LightGray"
											TextWrapping="NoWrap"
											Margin="0 0 10 0"/>
                                <TextBlock
											Text="{Binding Id, Mode=OneTime, StringFormat=Copy ID: {0:F0}}"
											HorizontalAlignment="Left"
                                            Foreground="LightGray"
											Style="{DynamicResource BaseTextBlockStyle}"
											TextTrimming="CharacterEllipsis"
											TextWrapping="NoWrap" />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                <Button Cursor="Hand" IsEnabled="{Binding ElementName=MachinesDashboardPage, Path=DataContext.AppState.IsVitroMarkRunning}" Content="VitroMark" Opacity="0.9" Margin="0 0 10 0" Style="{StaticResource VitroMarkButtonStyle}" />
                                <Button Cursor="Hand" Content="Assign Machine" Visibility="{Binding AssignMachineButtonVisibility}" Margin="0 0 10 0" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnAssignMachine}" CommandParameter="{Binding Id}" Opacity="0.9" Style="{StaticResource RedoButtonStyle}"/>
                                <Button Cursor="Hand" Content="Unassign" Visibility="{Binding UnassignButtonVisibility}" Margin="0 0 10 0" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnUnassignMachine}" CommandParameter="{Binding Id}" Opacity="0.9" Style="{StaticResource UnassignButtonStyle}"/>
                                <Button Cursor="Hand" Content="Crystal Issue" Visibility="{Binding CrystalIssueButtonVisibility}" Margin="0 0 10 0" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnCrystalIssue}" CommandParameter="{Binding Id}" Opacity="0.9" Style="{StaticResource AddCrystalIssueButtonStyle}"/>
                                <Button Cursor="Hand" Content="Manual Complete" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnManualComplete}" CommandParameter="{Binding Id}" Margin="0 0 10 0" Opacity="0.9" Style="{StaticResource ManualCompleteButtonStyle}"/>
                                <Button Cursor="Hand" Content="Confirmation Page" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnCP}" CommandParameter="{Binding Order.NameOrder}" Margin="0 0 10 0" Opacity="0.9"/>
                                <Button Cursor="Hand" Content="Order Archive" Command="{Binding ElementName=MachinesDashboardPage, Path=DataContext.OnOA}" CommandParameter="{Binding Order.NameOrder}" Margin="0 0 10 0" Opacity="0.9"/>
                            </StackPanel>
                        </ui:SimpleStackPanel>
                    </ui:SimpleStackPanel>
                </DataTemplate>

            </ui:ListView.ItemTemplate>
        </ui:ListView>

        <ui:SimpleStackPanel Name="Pagination" Orientation="Horizontal" Grid.Column="1" Grid.Row="7" Margin="0 10 0 0">
            <ui:TitleBarButton
                x:Name="BackButton"
                Cursor="Hand"
                Content="&#xE72B;"
                ContentTemplate="{x:Null}" />
            <ui:ItemsRepeater
                VerticalAlignment="Top"
                ItemsSource="{Binding Pages}">
                <ui:ItemsRepeater.ItemTemplate>
                    <DataTemplate>
                        <ui:TitleBarButton
                            Cursor="Hand"
                            FontSize="14"
                            FontFamily="Segoe UI"
                            IsActive="{Binding IsSelected}"
                            Command="{Binding NavigateToSelectedPage}"
                            Click="ButtonBase_OnClick"
                            CommandParameter="{Binding PageNumber}"
                            Content="{Binding PageName}" />
                    </DataTemplate>
                </ui:ItemsRepeater.ItemTemplate>
                <ui:ItemsRepeater.Layout>
                    <ui:StackLayout Orientation="Horizontal" />
                </ui:ItemsRepeater.Layout>
            </ui:ItemsRepeater>
            <ui:TitleBarButton
                x:Name="ForwardButton"
                Cursor="Hand"
                Content="&#xE72A;"
                ContentTemplate="{x:Null}" />
        </ui:SimpleStackPanel>

    </Grid>
</ui:Page>